@article{MORALESRAMIREZ201994,
title = "Speech-acts based analysis for requirements discovery from online discussions",
journal = "Information Systems",
volume = "86",
pages = "94 - 112",
year = "2019",
issn = "0306-4379",
doi = "https://doi.org/10.1016/j.is.2018.08.003",
url = "http://www.sciencedirect.com/science/article/pii/S0306437917306087",
author = "Itzel Morales-Ramirez and Fitsum Meshesha Kifetew and Anna Perini",
keywords = "Requirements engineering, Speech-acts analysis, Sentiment analysis, Classification techniques, Online discussions",
abstract = "Online discussions about software applications and services that take place on web-based communication platforms represent an invaluable knowledge source for diverse software engineering tasks, including requirements elicitation. The amount of research work on developing effective tool-supported analysis methods is rapidly increasing, as part of the so called software analytics. Textual messages in App store reviews, tweets, online discussions taking place in mailing lists and user forums, are processed by combining natural language techniques to filter out irrelevant data; text mining and machine learning algorithms to classify messages into different categories, such as bug report and feature request. Our research objective is to exploit a linguistic technique based on speech-acts for the analysis of online discussions with the ultimate goal of discovering requirements-relevant information. In this paper, we present a revised and extended version of the speech-acts based analysis technique, which we previously presented at CAiSE 2017, together with a detailed experimental characterisation of its properties. Datasets used in the experimental evaluation are taken from a widely used open source software project (161120 textual comments), as well as from an industrial project in the home energy management domain. We make them available for experiment replication purposes. On these datasets, our approach is able to successfully classify messages into Feature/Enhancement and Other, with F-measure of 0.81 and 0.84 respectively. We also found evidence that there is an association between types of speech-acts and categories of issues, and that there is correlation between some of the speech-acts and issue priority, thus motivating further research on the exploitation of our speech-acts based analysis technique in semi-automated multi-criteria requirements prioritisation."
}
@article{PARRA2015180,
title = "A methodology for the classification of quality of requirements using machine learning techniques",
journal = "Information and Software Technology",
volume = "67",
pages = "180 - 195",
year = "2015",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2015.07.006",
url = "http://www.sciencedirect.com/science/article/pii/S0950584915001299",
author = "Eugenio Parra and Christos Dimou and Juan Llorens and Valentín Moreno and Anabel Fraga",
keywords = "Software engineering, Requirements engineering, Requirements quality, Machine learning",
abstract = "Context
One of the most important factors in the development of a software project is the quality of their requirements. Erroneous requirements, if not detected early, may cause many serious problems, such as substantial additional costs, failure to meet the expected objectives and delays in delivery dates. For these reasons, great effort must be devoted in requirements engineering to ensure that the project’s requirements results are of high quality. One of the aims of this discipline is the automatic processing of requirements for assessing their quality; this aim, however, results in a complex task because the quality of requirements depends mostly on the interpretation of experts and the necessities and demands of the project at hand.
Objective
The objective of this paper is to assess the quality of requirements automatically, emulating the assessment that a quality expert of a project would assess.
Method
The proposed methodology is based on the idea of learning based on standard metrics that represent the characteristics that an expert takes into consideration when deciding on the good or bad quality of requirements. Using machine learning techniques, a classifier is trained with requirements earlier classified by the expert, which then is used for classifying newly provided requirements.
Results
We present two approaches to represent the methodology with two situations of the problem in function of the requirement corpus learning balancing, obtaining different results in the accuracy and the efficiency in order to evaluate both representations. The paper demonstrates the reliability of the methodology by presenting a case study with requirements provided by the Requirements Working Group of the INCOSE organization.
Conclusions
A methodology that evaluates the quality of requirements written in natural language is presented in order to emulate the quality that the expert would provide for new requirements, with 86.1 of average in the accuracy."
}
@article{GUPTA2018,
title = "CDBR: A semi-automated collaborative execute-before-after dependency-based requirement prioritization approach",
journal = "Journal of King Saud University - Computer and Information Sciences",
year = "2018",
issn = "1319-1578",
doi = "https://doi.org/10.1016/j.jksuci.2018.10.004",
url = "http://www.sciencedirect.com/science/article/pii/S1319157818304518",
author = "Ankita Gupta and Chetna Gupta",
keywords = "Collaboration, Machine learning, Requirements dependency, Requirements prioritization, Requirement engineering",
abstract = "The success of requirement prioritization process largely depends upon how well different constraints and influential factors are handled by stakeholders and developers while prioritization. The main goal of this research is to present a semi-automated dependency based collaborative requirement prioritization approach (CDBR), which uses linguistic values, execute-before-after (EBA) relation among requirements and machine learning algorithm to minimize the difference of opinion between stakeholder and developers for effective collaboration and for better approximation of final prioritization results, acceptable to both. The presented approach targets three major constraints rarely addressed in existing work, namely dependencies among requirements, communication among stakeholder and developers and the issue of scalability. Results of performance assessment conducted on several different requirement sets and on a case study by comparing CDBR with other state of the art approaches namely, AHP and IGA. The results are accurate and comparable in terms of effectiveness, efficiency, scalability and disagreement concerns among stakeholder and developers which in turn provides robustness to decision making process of awarding more importance to some requirements over others. CDBR overpowers AHP and IGA in terms of efficiency and processing time respectively."
}
@article{LI2018108,
title = "Automatically classifying user requests in crowdsourcing requirements engineering",
journal = "Journal of Systems and Software",
volume = "138",
pages = "108 - 123",
year = "2018",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2017.12.028",
url = "http://www.sciencedirect.com/science/article/pii/S0164121217303096",
author = "Chuanyi Li and Liguo Huang and Jidong Ge and Bin Luo and Vincent Ng",
keywords = "Crowdsourcing requirements engineering, Software requirements classification, Machine learning, Natural language processing",
abstract = "In order to make a software project succeed, it is necessary to determine the requirements for systems and to document them in a suitable manner. Many ways for requirements elicitation have been discussed. One way is to gather requirements with crowdsourcing methods, which has been discussed for years and is called crowdsourcing requirements engineering. User requests forums in open source communities, where users can propose their expected features of a software product, are common examples of platforms for gathering requirements from the crowd. Requirements collected from these platforms are often informal text descriptions and we name them user requests. In order to transform user requests into structured software requirements, it is better to know the class of requirements that each request belongs to so that each request can be rewritten according to corresponding requirement templates. In this paper, we propose an effective classification methodology by employing both project-specific and non-project-specific keywords and machine learning algorithms. The proposed strategy does well in achieving high classification accuracy by using keywords as features, reducing considerable manual efforts in building machine learning based classifiers, and having stable performance in finding minority classes no matter how few instances they have."
}