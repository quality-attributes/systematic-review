@INPROCEEDINGS{6894850, 
author={J. H. {Hayes} and W. {Li} and M. {Rahimi}}, 
booktitle={2014 IEEE 1st International Workshop on Artificial Intelligence for Requirements Engineering (AIRE)}, 
title={Weka meets TraceLab: Toward convenient classification: Machine learning for requirements engineering problems: A position paper}, 
year={2014}, 
volume={}, 
number={}, 
pages={9-12}, 
keywords={decision trees;formal specification;learning (artificial intelligence);pattern classification;TraceLab Weka component;Weka classification trees;requirements research tools;one off solutions;requirements engineering problems;Weka machine learning software suite;Classification tree analysis;Classification algorithms;Machine learning algorithms;Educational institutions;Software;Supervised learning;Artificial intelligence;machine learning;requirements engineering;classification;decision trees;TraceLab;Weka}, 
doi={10.1109/AIRE.2014.6894850}, 
ISSN={}, 
month={Aug},}
@INPROCEEDINGS{8719411, 
author={T. {Iqbal} and P. {Elahidoost} and L. {Lúcio}}, 
booktitle={2018 25th Asia-Pacific Software Engineering Conference (APSEC)}, 
title={A Bird's Eye View on Requirements Engineering and Machine Learning}, 
year={2018}, 
volume={}, 
number={}, 
pages={11-20}, 
keywords={learning (artificial intelligence);problem solving;software engineering;systems analysis;ML;machine learning;software requirement engineering;birds eye view;RE;requirement elicitation;Software;Requirements engineering;Task analysis;Machine learning;Cancer;Machine learning algorithms;Databases;Requirements Engineering;Machine learning;State of the art;Overview}, 
doi={10.1109/APSEC.2018.00015}, 
ISSN={}, 
month={Dec},}
@INPROCEEDINGS{8049156, 
author={M. {Noaeen} and Z. S. H. {Abad} and B. H. {Far}}, 
booktitle={2017 IEEE 25th International Requirements Engineering Conference (RE)}, 
title={Let’s Hear it from RETTA: A Requirements Elicitation Tool for TrAffic Management Systems}, 
year={2017}, 
volume={}, 
number={}, 
pages={450-451}, 
keywords={Android (operating system);Bayes methods;formal specification;graphical user interfaces;learning (artificial intelligence);natural language processing;pattern classification;systems analysis;traffic engineering computing;TM domain;software development;transportation engineering;software systems;nonfunctional requirements;software-reliant systems;RETTA tool;machine learning approaches;Natural Language Processing;requirements engineering;requirements elicitation tool-for-traffic management systems;functional requirements;naïve Bayes method;Android-based devices;Tools;Transportation;Complexity theory;Data analysis;Prototypes;Computational modeling;Requirements engineering;Requirements Engineering;Transportation Management;Tool Development;Traffic Signal Timing}, 
doi={10.1109/RE.2017.78}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8646010, 
author={M. G. {Gramajo} and L. {Ballejos} and M. {Ale}}, 
booktitle={2018 IEEE Biennial Congress of Argentina (ARGENCON)}, 
title={Software Requirements Engineering through Machine Learning Techniques: A Literature Review}, 
year={2018}, 
volume={}, 
number={}, 
pages={1-7}, 
keywords={learning (artificial intelligence);software engineering;systems analysis;software products;AA techniques;systematic mapping;software development environments;software requirements engineering;machine learning techniques;Software;Requirements engineering;Machine learning;Supervised learning;Erbium;Proposals;Bibliographies;Aprendizaje Automático;Aprendizaje Supervisado;Ingeniería de Requerimientos}, 
doi={10.1109/ARGENCON.2018.8646010}, 
ISSN={}, 
month={June},}
@INPROCEEDINGS{8258185, 
author={D. {Arruda} and N. H. {Madhavji}}, 
booktitle={2017 IEEE International Conference on Big Data (Big Data)}, 
title={Towards a requirements engineering artefact model in the context of big data software development projects: Research in progress}, 
year={2017}, 
volume={}, 
number={}, 
pages={2314-2319}, 
keywords={Big Data;formal specification;end-user Big Data applications;data analytics;process design;requirements engineering artefact model;Big Data software development projects;RE artefact models;BD-REAM;Big Data;Software;Requirements engineering;Data models;Unified modeling language;Software engineering;Stakeholders;Big Data;Requirements Engineering;Artefact Model;Big Data Requirements Engineering Artfect Model}, 
doi={10.1109/BigData.2017.8258185}, 
ISSN={}, 
month={Dec},}
@INPROCEEDINGS{6636705, 
author={H. {Sultanov} and J. H. {Hayes}}, 
booktitle={2013 21st IEEE International Requirements Engineering Conference (RE)}, 
title={Application of reinforcement learning to requirements engineering: requirements tracing}, 
year={2013}, 
volume={}, 
number={}, 
pages={52-61}, 
keywords={formal verification;learning (artificial intelligence);program diagnostics;reinforcement learning;requirements engineering;requirements traceability method;machine learning technique;RL method;textual requirements artifacts;Learning (artificial intelligence);Software;Navigation;Vocabulary;Joining processes;Educational institutions;machine learning;reinforcement learning;information retrieval;requirements traceability;software engineering;Ubiquitous Grand Challenge;Research Project 2 of Grand Challenges of Traceability}, 
doi={10.1109/RE.2013.6636705}, 
ISSN={}, 
month={July},}
@INPROCEEDINGS{8049172, 
author={Z. S. H. {Abad} and O. {Karras} and P. {Ghazi} and M. {Glinz} and G. {Ruhe} and K. {Schneider}}, 
booktitle={2017 IEEE 25th International Requirements Engineering Conference (RE)}, 
title={What Works Better? A Study of Classifying Requirements}, 
year={2017}, 
volume={}, 
number={}, 
pages={496-501}, 
keywords={Bayes methods;formal specification;learning (artificial intelligence);natural languages;pattern classification;text analysis;NFR;preprocessing requirements;standardizes;classification algorithms;requirements engineering;natural language;machine learning;requirements classification;nonfunctional requirements;OpenScience tera-PROMISE repository;Latent Dirichlet Allocation;Biterm Topic Modeling;Naive Bayes;Feature extraction;Natural languages;Tagging;Requirements engineering;Machine learning algorithms;Speech;Functional and Non-Functional Requirements;Classification;Topic Modeling;Clustering;Naive Bayes}, 
doi={10.1109/RE.2017.36}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8054881, 
author={L. {van Rooijen} and F. S. {Bäumer} and M. C. {Platenius} and M. {Geierhos} and H. {Hamann} and G. {Engels}}, 
booktitle={2017 IEEE 25th International Requirements Engineering Conference Workshops (REW)}, 
title={From User Demand to Software Service: Using Machine Learning to Automate the Requirements Specification Process}, 
year={2017}, 
volume={}, 
number={}, 
pages={379-385}, 
keywords={formal specification;learning (artificial intelligence);natural language processing;ontologies (artificial intelligence);software development management;systems analysis;untrained users;trained users;formal requirements models;requirements engineering;unstructured natural language description;behavioral descriptions;behavioral ontologies;search-based technique;software deployment process automation;software development process automation;software service markets;Software;Unified modeling language;Requirements engineering;Ontologies;Search problems;Natural languages}, 
doi={10.1109/REW.2017.26}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8595127, 
author={A. {Dekhtyar} and J. H. {Hayes}}, 
booktitle={2018 1st International Workshop on Learning from other Disciplines for Requirements Engineering (D4RE)}, 
title={Automating Requirements Traceability: Two Decades of Learning from KDD}, 
year={2018}, 
volume={}, 
number={}, 
pages={12-15}, 
keywords={data mining;information retrieval;learning (artificial intelligence);requirements traceability;data methodology;knowledge discovery in data;KDD;Software;Software engineering;Information retrieval;Conferences;Requirements engineering;Machine learning;Area measurement;requirements tracing, traceability, knowledge discovery from data, information retrieval}, 
doi={10.1109/D4RE.2018.00009}, 
ISSN={}, 
month={Aug},}
@INPROCEEDINGS{7765522, 
author={T. {Merten} and M. {Falis} and P. {Hübner} and T. {Quirchmayr} and S. {Bürsner} and B. {Paech}}, 
booktitle={2016 IEEE 24th International Requirements Engineering Conference (RE)}, 
title={Software Feature Request Detection in Issue Tracking Systems}, 
year={2016}, 
volume={}, 
number={}, 
pages={166-175}, 
keywords={learning (artificial intelligence);natural language processing;program debugging;systems analysis;software feature request detection;issue tracking systems;requirements engineering;bug reports;programming tasks;natural language processing;machine learning;natural language data;bag of words;subject-action-object;meta-data;data fields;Software;Computer bugs;Natural languages;Feature extraction;Machine learning algorithms;Prediction algorithms;Training data;Software Feature Request Detection;Mining Software Repositories;Machine Learning;Natural Language Processing}, 
doi={10.1109/RE.2016.8}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8593012, 
author={H. {Alrumaih} and A. {Mirza} and H. {Alsalamah}}, 
booktitle={2018 21st Saudi Computer Society National Computer Conference (NCC)}, 
title={Toward Automated Software Requirements Classification}, 
year={2018}, 
volume={}, 
number={}, 
pages={1-6}, 
keywords={formal specification;formal verification;pattern classification;systems analysis;requirements engineering;software process;software engineering;software systems development;automated software requirements classification;Requirements engineering;Software engineering;Software systems;Machine learning;Stakeholders;software engineering;requirements engineering;requirements classification;artificial intelligence;machine learning}, 
doi={10.1109/NCG.2018.8593012}, 
ISSN={}, 
month={April},}
@INPROCEEDINGS{8049171, 
author={Z. {Kurtanović} and W. {Maalej}}, 
booktitle={2017 IEEE 25th International Requirements Engineering Conference (RE)}, 
title={Automatically Classifying Functional and Non-functional Requirements Using Supervised Machine Learning}, 
year={2017}, 
volume={}, 
number={}, 
pages={490-495}, 
keywords={learning (artificial intelligence);meta data;pattern classification;support vector machines;systems analysis;text analysis;nonfunctional requirements;supervised machine learning;RE17 data challenge;performance requirements;classifiers;Support Vector Machine classifier algorithm;security;meta-data;automatically requirements classification;quality attributes;lexical features;syntactical features;sampling strategies;Training;Usability;Security;Feature extraction;Vegetation;Support vector machines;Requirements;Classification;Machine Learning;Imbalanced Data}, 
doi={10.1109/RE.2017.82}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{7815604, 
author={J. {Winkler} and A. {Vogelsang}}, 
booktitle={2016 IEEE 24th International Requirements Engineering Conference Workshops (REW)}, 
title={Automatic Classification of Requirements Based on Convolutional Neural Networks}, 
year={2016}, 
volume={}, 
number={}, 
pages={39-45}, 
keywords={convolution;formal specification;natural languages;neural nets;pattern classification;automatic requirements classification;convolutional neural networks;requirements engineering;natural language requirements specifications;automatic content elements classification;real-world automotive requirements specification;Neural networks;Industries;Natural language processing;Training;Data mining;Conferences;Requirements engineering;convolutional neural networks;machine learning;quality assurance;classification}, 
doi={10.1109/REW.2016.021}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8444122, 
author={M. H. {Osman} and M. F. {Zaharin}}, 
booktitle={2018 IEEE/ACM 5th International Workshop on Requirements Engineering and Testing (RET)}, 
title={Ambiguous Software Requirement Specification Detection: An Automated Approach}, 
year={2018}, 
volume={}, 
number={}, 
pages={33-40}, 
keywords={data mining;feature extraction;formal specification;learning (artificial intelligence);pattern classification;project management;software development management;software engineering;software quality;text analysis;automated approach;text mining;Malaysian industrial SRS documents;training set;ambiguous software requirement specification detection;software requirement specification document;crucial document;software development process;initial development phase;machine learning;feature extraction;classification algorithms;working prototype;classification model;Conferences;Requirements engineering;Testing;Software Engineering;Requirement Engineering;Machine Learning;Text Mining}, 
doi={}, 
ISSN={}, 
month={June},}
@INPROCEEDINGS{6779538, 
author={R. {Sharma} and J. {Bhatia} and K. K. {Biswas}}, 
booktitle={2014 IEEE International Advance Computing Conference (IACC)}, 
title={Automated identification of business rules in requirements documents}, 
year={2014}, 
volume={}, 
number={}, 
pages={1442-1447}, 
keywords={Bayes methods;business data processing;formal specification;learning (artificial intelligence);natural language processing;support vector machines;systems analysis;text analysis;trees (mathematics);automated business rule identification;requirements engineering process;requirements documentation;business rules categories;requirement specifications;domain knowledge documents;change request;request for proposal;machine learning algorithm;support vector machine algorithm;random forest algorithm;naive Bayes algorithm;requirements corpus;stop-words;requirement statements;Classification algorithms;Information systems;Machine learning algorithms;Organizations;Documentation;Support vector machines;Business Rules;Requirements;Machine Learning}, 
doi={10.1109/IAdCC.2014.6779538}, 
ISSN={}, 
month={Feb},}
@INPROCEEDINGS{8049170, 
author={A. {Dekhtyar} and V. {Fong}}, 
booktitle={2017 IEEE 25th International Requirements Engineering Conference (RE)}, 
title={RE Data Challenge: Requirements Identification with Word2Vec and TensorFlow}, 
year={2017}, 
volume={}, 
number={}, 
pages={484-489}, 
keywords={Bayes methods;formal specification;learning (artificial intelligence);natural language processing;neural nets;pattern classification;systems analysis;text analysis;multilayer neural networks;Word2Vec representation;requirements documents;requirements identification;word count;Word2Vec embeddings;Google TensorFlow package;TensorFlow convolutional neural networks;TensorFlow-guided learning;machine learning techniques;SecReq dataset;NFR dataset;naive Bayes;TF-IDF representation;Convolution;Google;Vocabulary;Feature extraction;Neural networks;Training;machine learning;convolutional neural networks;requirements identification;TensorFlow;Word2Vec}, 
doi={10.1109/RE.2017.26}, 
ISSN={}, 
month={Sep.},}
@INPROCEEDINGS{8491169, 
author={M. {Singh}}, 
booktitle={2018 IEEE 26th International Requirements Engineering Conference (RE)}, 
title={Automated Validation of Requirement Reviews: A Machine Learning Approach}, 
year={2018}, 
volume={}, 
number={}, 
pages={460-465}, 
keywords={data mining;formal specification;graph theory;inspection;learning (artificial intelligence);natural language processing;program diagnostics;software development management;software fault tolerance;software quality;requirement reviews;software development;fuzzy phases;software inspections;design artifacts;fault propagation;inspection process;software requirements specification document;actual development work;inspection reviews;high-quality requirements;fault prone requirements pre-inspection;interrelated requirements;reported faults post-inspection;NL processing;NL requirements;post-inspection decisions;Inspection;Software;Semantics;Fault diagnosis;Analytical models;Data mining;Natural languages;requirement inspections;classification;semantic analysis;topic modeling;high quality requirements;interrelated requirements;part of speech tags}, 
doi={10.1109/RE.2018.00062}, 
ISSN={}, 
month={Aug},}
@INPROCEEDINGS{8802756, 
author={G. {Deshpande}}, 
booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)}, 
title={SReYantra: Automated Software Requirement Inter-Dependencies Elicitation, Analysis and Learning}, 
year={2019}, 
volume={}, 
number={}, 
pages={186-187}, 
keywords={formal specification;graph theory;learning (artificial intelligence);natural language processing;software engineering;automated software requirement inter-dependencies elicitation;requirements elicitation;natural language based requirements;maintenance;software products;PhD research proposal;requirement dependencies;software development life cycle;natural language processing;SReYantra;NLP;dependencies extraction;graph theoretic algorithms;Requirements Engineering, Requirements Interdependency Management, NLP, Machine Learning}, 
doi={10.1109/ICSE-Companion.2019.00076}, 
ISSN={}, 
month={May},}
@INPROCEEDINGS{8754214, 
author={C. {Baker} and L. {Deng} and S. {Chakraborty} and J. {Dehlinger}}, 
booktitle={2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)}, 
title={Automatic Multi-class Non-Functional Software Requirements Classification Using Neural Networks}, 
year={2019}, 
volume={2}, 
number={}, 
pages={610-615}, 
keywords={convolutional neural nets;formal specification;learning (artificial intelligence);software quality;CNN model;automatic multiclass nonfunctional software requirements classification;neural networks;machine learning;software engineering lifecycle;ML models;neural network models;artificial neural network;convolutional neural network;nonfunctional requirements;NFR;Software;Conferences;non-functional requirements;requirements engineering;machine learning}, 
doi={10.1109/COMPSAC.2019.10275}, 
ISSN={}, 
month={Jul},}
@INPROCEEDINGS{7320414, 
author={W. {Maalej} and H. {Nabil}}, 
booktitle={2015 IEEE 23rd International Requirements Engineering Conference (RE)}, 
title={Bug report, feature request, or simply praise? On automatically classifying app reviews}, 
year={2015}, 
volume={}, 
number={}, 
pages={116-125}, 
keywords={data mining;natural language processing;pattern classification;probability;software reviews;string matching;text analysis;bug report;app reviews classification;App stores;Google Play;Apple AppStore;several probabilistic techniques;review metadata;star rating;user experiences;feature requests;text classification;natural language processing;sentiment analysis techniques;string matching;multiple binary classifiers;multiclass classifiers;review analytics tool design;Metadata;Google;Accuracy;Training;Computer crashes;Natural language processing;Machine learning algorithms}, 
doi={10.1109/RE.2015.7320414}, 
ISSN={}, 
month={Aug},}
@INPROCEEDINGS{6912260, 
author={M. {Riaz} and J. {King} and J. {Slankas} and L. {Williams}}, 
booktitle={2014 IEEE 22nd International Requirements Engineering Conference (RE)}, 
title={Hidden in plain sight: Automatically identifying security requirements from natural language artifacts}, 
year={2014}, 
volume={}, 
number={}, 
pages={183-192}, 
keywords={formal specification;learning (artificial intelligence);natural language processing;security of data;natural language artifacts;requirements specifications;software systems;requirements engineer;security-relevant sentences;natural language requirements artifacts;context-specific security requirements templates;functional security requirements;machine learning techniques;tool-assisted process;security objectives;healthcare domain;functional requirements;context-specific templates;Security;Natural languages;Object recognition;Software systems;Availability;Medical services;Text categorization;Security;requirements;objectives;templates;access control;auditing;text classification;constraints;natural language parsing}, 
doi={10.1109/RE.2014.6912260}, 
ISSN={}, 
month={Aug},}
@INPROCEEDINGS{8714682, 
author={M. Q. {Riaz} and W. H. {Butt} and S. {Rehman}}, 
booktitle={2019 5th International Conference on Information Management (ICIM)}, 
title={Automatic Detection of Ambiguous Software Requirements: An Insight}, 
year={2019}, 
volume={}, 
number={}, 
pages={1-6}, 
keywords={formal specification;natural language processing;software quality;systems analysis;development phase;automatic detection;natural language ambiguities;software requirement documents;ambiguous software requirements;Requirements Engineering;software development lifecycle;software project;Software;Tools;Natural language processing;Documentation;Knowledge based systems;Machine learning;natural language requirement;requirement engineering;ambiguity;natural language ambiguity;ambiguous software requirements;natural language processing}, 
doi={10.1109/INFOMAN.2019.8714682}, 
ISSN={}, 
month={March},}